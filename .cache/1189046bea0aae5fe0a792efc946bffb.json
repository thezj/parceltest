{"dependencies":[{"name":"C:\\Users\\wksc\\Desktop\\parceljs\\package.json","includedInParent":true,"mtime":1519723859821},{"name":"C:\\Users\\wksc\\Desktop\\parceljs\\.babelrc","includedInParent":true,"mtime":1519721128702},{"name":"C:\\Users\\wksc\\Desktop\\parceljs\\node_modules\\throttle-debounce\\package.json","includedInParent":true,"mtime":1462115752000},{"name":"./throttle","loc":{"line":3,"column":23}}],"generated":{"js":"/* eslint-disable no-undefined */\n\nvar throttle = require('./throttle');\n\n/**\n * Debounce execution of a function. Debouncing, unlike throttling,\n * guarantees that a function is only executed a single time, either at the\n * very beginning of a series of calls, or at the very end.\n *\n * @param  {Number}   delay         A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.\n * @param  {Boolean}  atBegin       Optional, defaults to false. If atBegin is false or unspecified, callback will only be executed `delay` milliseconds\n *                                  after the last debounced-function call. If atBegin is true, callback will be executed only at the first debounced-function call.\n *                                  (After the throttled-function has not been called for `delay` milliseconds, the internal counter is reset).\n * @param  {Function} callback      A function to be executed after delay milliseconds. The `this` context and all arguments are passed through, as-is,\n *                                  to `callback` when the debounced-function is executed.\n *\n * @return {Function} A new, debounced function.\n */\nmodule.exports = function ( delay, atBegin, callback ) {\n\treturn callback === undefined ? throttle(delay, atBegin, false) : throttle(delay, callback, atBegin !== false);\n};\n","map":{"mappings":[{"source":"node_modules\\throttle-debounce\\debounce.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\throttle-debounce\\debounce.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\throttle-debounce\\debounce.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\throttle-debounce\\debounce.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\throttle-debounce\\debounce.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\throttle-debounce\\debounce.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\throttle-debounce\\debounce.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\throttle-debounce\\debounce.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\throttle-debounce\\debounce.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\throttle-debounce\\debounce.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\throttle-debounce\\debounce.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\throttle-debounce\\debounce.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\throttle-debounce\\debounce.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\throttle-debounce\\debounce.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\throttle-debounce\\debounce.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\throttle-debounce\\debounce.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\throttle-debounce\\debounce.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\throttle-debounce\\debounce.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\throttle-debounce\\debounce.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\throttle-debounce\\debounce.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\throttle-debounce\\debounce.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\throttle-debounce\\debounce.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}}],"sources":{"node_modules\\throttle-debounce\\debounce.js":"/* eslint-disable no-undefined */\n\nvar throttle = require('./throttle');\n\n/**\n * Debounce execution of a function. Debouncing, unlike throttling,\n * guarantees that a function is only executed a single time, either at the\n * very beginning of a series of calls, or at the very end.\n *\n * @param  {Number}   delay         A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.\n * @param  {Boolean}  atBegin       Optional, defaults to false. If atBegin is false or unspecified, callback will only be executed `delay` milliseconds\n *                                  after the last debounced-function call. If atBegin is true, callback will be executed only at the first debounced-function call.\n *                                  (After the throttled-function has not been called for `delay` milliseconds, the internal counter is reset).\n * @param  {Function} callback      A function to be executed after delay milliseconds. The `this` context and all arguments are passed through, as-is,\n *                                  to `callback` when the debounced-function is executed.\n *\n * @return {Function} A new, debounced function.\n */\nmodule.exports = function ( delay, atBegin, callback ) {\n\treturn callback === undefined ? throttle(delay, atBegin, false) : throttle(delay, callback, atBegin !== false);\n};\n"},"lineCount":22}},"hash":"766b6fdeca8555e2578d2270d80b4fcc","cacheData":{"env":{}}}